Metadata-Version: 2.4
Name: landgen
Version: 0.1.0
Summary: Landing page generator - Convert markdown resumes to professional websites
Author-email: Asim Merchant <asimthatsme@gmail.com>
License: MIT
Project-URL: Homepage, https://github.com/AsimMerchant/my_own_landing
Project-URL: Repository, https://github.com/AsimMerchant/my_own_landing
Project-URL: Bug Tracker, https://github.com/AsimMerchant/my_own_landing/issues
Keywords: resume,html,generator,landing-page,markdown
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Internet :: WWW/HTTP :: Site Management
Classifier: Topic :: Software Development :: Code Generators
Classifier: Topic :: Text Processing :: Markup :: HTML
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: markdown>=3.4.0
Requires-Dist: Jinja2>=3.1.0
Requires-Dist: click>=8.0.0
Requires-Dist: PyYAML>=6.0
Provides-Extra: dev
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: pytest-cov>=4.0.0; extra == "dev"
Requires-Dist: black>=23.0.0; extra == "dev"
Requires-Dist: flake8>=6.0.0; extra == "dev"
Provides-Extra: extras
Requires-Dist: Pillow>=9.0.0; extra == "extras"
Requires-Dist: requests>=2.28.0; extra == "extras"

# Landing Page Generator Project

A comprehensive tool for automatically generating professional landing pages from markdown resumes. This project includes both a working portfolio website example and the complete development plan for building the generator tool.

## 🎯 Project Overview

This repository contains:
1. **Reference Implementation**: Asim Merchant's professional portfolio website
2. **Generator Tool Planning**: Complete documentation and architecture for building the landing page generator
3. **Template Specification**: Standardized markdown resume format for automatic parsing

## 📋 Project Documents

- **[PROJECT_PLAN.md](PROJECT_PLAN.md)**: Complete project roadmap with detailed task breakdown
- **[ARCHITECTURE.md](ARCHITECTURE.md)**: Technical architecture and system design
- **[RESUME_TEMPLATE.md](RESUME_TEMPLATE.md)**: Markdown resume format specification
- **[resume.md](resume.md)**: Reference resume example
- **[index.html](index.html)**: Generated landing page template example

## 🛠️ Generator Tool Vision

The Landing Page Generator will be a Python-based CLI tool that:
- **Input**: Takes markdown resume files following our standardized format
- **Process**: Parses resume data and applies professional template
- **Output**: Generates complete landing page websites ready for deployment

### Key Benefits
- ✅ **Zero Coding Required** - Users only need to write their resume in markdown
- ✅ **Professional Design** - Based on proven, modern portfolio template
- ✅ **Instant Deployment** - Generates static files ready for any hosting
- ✅ **Customizable Themes** - Multiple color schemes and layout options
- ✅ **SEO Optimized** - Proper meta tags and search engine optimization

## �️ Current Project Structure

```
my_own_landing/
├── 📋 PROJECT_PLAN.md          # Complete development roadmap
├── 🏗️ ARCHITECTURE.md          # Technical system design
├── 📝 RESUME_TEMPLATE.md       # Markdown resume format specification
├── 📄 index.html               # Reference landing page template
├── 📑 resume.md                # Example resume (follows template spec)
├── 🌐 manifest.json           # PWA configuration
├── 🤖 robots.txt              # SEO crawler instructions  
├── 🗺️ sitemap.xml             # Site navigation for SEO
├── assets/
│   ├── css/
│   │   └── style.css          # Modern, responsive stylesheet
│   ├── js/
│   │   └── script.js          # Interactive features & animations
│   └── images/                # Optimized icons and assets
└── README.md                  # This file
```

## 🚀 Reference Implementation Features

The current landing page demonstrates:
- **Modern Design**: Clean, developer-focused layout with terminal aesthetics
- **Responsive**: Mobile-first design that works on all devices
- **Interactive**: Smooth animations, typing effects, and scroll-triggered animations
- **Performance**: Fast loading with optimized assets (<2MB total)
- **Accessible**: WCAG 2.1 compliant with keyboard navigation
- **SEO Optimized**: Proper meta tags, sitemap, and semantic HTML

## 🛠️ Technology Stack

### Current Template
- **HTML5**: Semantic markup with accessibility features
- **CSS3**: Modern styling with Grid, Flexbox, and custom properties
- **JavaScript ES6+**: Interactive features and smooth animations
- **Font Awesome**: Professional iconography
- **Google Fonts**: Inter and JetBrains Mono typefaces

### Planned Generator Tool
- **Python 3.8+**: Core parsing and generation logic
- **Jinja2**: Template engine for dynamic content
- **Markdown**: Resume parsing with python-markdown
- **YAML**: Configuration file format
- **Click**: Command-line interface framework

## 📊 Development Progress

### ✅ Completed (Reference Implementation)
- [x] Professional portfolio website with modern design
- [x] Responsive layout optimized for all devices  
- [x] Interactive animations and typing effects
- [x] SEO optimization with proper meta tags
- [x] Accessibility compliance (WCAG 2.1)
- [x] Performance optimization (<3s load time)

### 🏗️ In Progress
- [x] **Analyze resume structure** - Defining template format and extractable fields
- [ ] Create resume parser - Python script for markdown parsing
- [ ] Design template system - HTML templates with dynamic placeholders
- [ ] Build template generator - Core engine for data + template combination

### 📋 Planned (Generator Tool)
- [ ] Create assets handler - CSS/JS/image management
- [ ] Build CLI interface - User-friendly command-line tool
- [ ] Add configuration options - Theme and customization support
- [ ] Create documentation - Usage guides and examples
- [ ] Test with sample data - Validate with various resume formats
- [ ] Package for distribution - PyPI package and standalone executable

## 🎯 Quick Start (Current Template)

### For Developers
```bash
# Clone the repository
git clone https://github.com/AsimMerchant/my-portfolio-website.git
cd my-portfolio-website

# Customize resume content
# Edit resume.md with your information (follow RESUME_TEMPLATE.md format)

# Customize landing page
# Edit index.html with your details
# Modify assets/css/style.css for styling changes
# Update assets/js/script.js for functionality changes

# Deploy
# Upload to your preferred hosting service
```

### For Future Generator Tool Users
```bash
# Install the tool (when ready)
pip install landing-page-generator

# Generate your landing page
landgen generate my-resume.md ./my-website

# Customize (optional)
landgen init-config ./config.yaml
# Edit config.yaml for theme and layout preferences
landgen generate my-resume.md ./my-website --config ./config.yaml

# Deploy the generated website
cd my-website
# Upload contents to your hosting service
```

## 🎨 Design System

### Color Palette
- **Primary**: #00d4ff (Cyan Blue) - Main brand color
- **Secondary**: #ff6b35 (Orange Red) - Accent and highlights  
- **Success**: #00ff88 (Green) - Success states and CTAs
- **Background**: #0a0a0f (Dark) - Main background
- **Text**: #ffffff, #b8c5d6, #8892b0 - Typography hierarchy

### Typography
- **Primary**: Inter - Clean, professional sans-serif for UI text
- **Monospace**: JetBrains Mono - Terminal elements and code display
- **Hierarchy**: Clear heading structure with proper contrast ratios

### Layout Principles
- **Mobile-First**: Responsive design starting from 320px
- **Grid System**: CSS Grid for complex layouts, Flexbox for components
- **Spacing**: Consistent 8px baseline grid system
- **Accessibility**: Proper focus states, ARIA labels, semantic HTML

## � Documentation Guide

### For Current Template Users
If you want to customize the existing landing page template:

1. **Read [RESUME_TEMPLATE.md](RESUME_TEMPLATE.md)** - Learn the markdown resume format
2. **Update `resume.md`** - Replace with your information following the template
3. **Customize `index.html`** - Modify the landing page content
4. **Adjust `assets/css/style.css`** - Change colors, fonts, and layout
5. **Deploy** - Upload to your hosting service

### For Generator Tool Development
If you want to contribute to building the generator tool:

1. **Read [PROJECT_PLAN.md](PROJECT_PLAN.md)** - Understand the complete roadmap
2. **Study [ARCHITECTURE.md](ARCHITECTURE.md)** - Review the technical design
3. **Follow [RESUME_TEMPLATE.md](RESUME_TEMPLATE.md)** - Understand data structure requirements
4. **Check current progress** - See which tasks are completed in the todo list below

## 🤝 Contributing

### Current Priorities
We're actively looking for contributors to help with:
- **Python Resume Parser** - Build markdown parsing logic
- **Template Engine** - Create Jinja2 template system
- **CLI Interface** - Design user-friendly command-line tool
- **Testing** - Create comprehensive test suite
- **Documentation** - Improve guides and examples

### How to Contribute
1. Fork the repository
2. Choose a task from the [PROJECT_PLAN.md](PROJECT_PLAN.md)
3. Create a feature branch
4. Implement the feature following the [ARCHITECTURE.md](ARCHITECTURE.md)
5. Add tests and documentation
6. Submit a pull request

## 🌟 Future Vision

### Short Term (Q4 2025)
- ✅ Complete resume template specification
- 🔄 Build Python resume parser
- 🔄 Create basic template engine
- 🔄 Develop CLI interface

### Medium Term (Q1 2026)
- 📋 Add multiple theme support
- 📋 Implement configuration system
- 📋 Create comprehensive test suite
- 📋 Package for PyPI distribution

### Long Term (Q2+ 2026)
- 📋 Web-based generator interface
- 📋 Multiple template designs
- 📋 Integration with LinkedIn/GitHub APIs
- 📋 Enterprise features and customization

## 💡 Use Cases

### For Developers
- **Job Seekers**: Create professional portfolios quickly
- **Freelancers**: Generate client-ready websites
- **Students**: Build impressive graduation portfolios
- **Career Changers**: Professional web presence in minutes

### For Organizations
- **Recruiting Agencies**: Standardized candidate presentations
- **Universities**: Student portfolio generation
- **Companies**: Employee showcase pages
- **Training Programs**: Graduate portfolio creation

## 🔗 Related Resources

### Documentation
- [Project Plan](PROJECT_PLAN.md) - Complete development roadmap
- [Architecture Guide](ARCHITECTURE.md) - Technical system design
- [Resume Template](RESUME_TEMPLATE.md) - Markdown format specification

### External Resources
- [Markdown Guide](https://www.markdownguide.org/) - Learn markdown syntax
- [Jinja2 Documentation](https://jinja.palletsprojects.com/) - Template engine docs
- [GitHub Pages](https://pages.github.com/) - Free static site hosting
- [Netlify](https://www.netlify.com/) - Modern web hosting platform

## � Support & Community

### Getting Help
- **Issues**: Report bugs or request features via GitHub Issues
- **Discussions**: Join project discussions for questions and ideas
- **Documentation**: Check existing docs before asking questions
- **Community**: Connect with other users and contributors

### Contact
- **Project Maintainer**: Asim Merchant (@AsimMerchant)
- **Email**: asimthatsme@gmail.com
- **GitHub**: [Project Repository](https://github.com/AsimMerchant/my-portfolio-website)
- Meta tags and Open Graph data
- Alt attributes for images
- Clean URL structure
- Fast loading times

## ♿ Accessibility Features

- ARIA labels and roles
- Keyboard navigation support
- High contrast mode support
- Screen reader friendly
- Focus indicators
- Reduced motion preferences

## 🐛 Known Issues & Limitations

- GitHub API rate limiting (60 requests/hour for unauthenticated)
- Contact form requires backend integration for functionality
- Some animations may not work in older browsers

## 🔄 Future Enhancements

- [ ] Blog section integration
- [ ] Dark/Light theme toggle
- [ ] Multi-language support
- [ ] PWA capabilities
- [ ] Advanced analytics integration
- [ ] Certificate and achievement showcase

## 📄 License

This project is open source and available under the [MIT License](LICENSE).

## 🤝 Contributing

Feel free to fork this project and adapt it for your own portfolio. If you make improvements, consider sharing them back!

## 📞 Support

For questions or support, please contact:
- **Email**: asimthatsme@gmail.com
- **GitHub**: [@AsimMerchant](https://github.com/AsimMerchant)
- **LinkedIn**: [Asim Merchant](https://www.linkedin.com/in/asim-merchant-baaa0684/)

---

**Built with ❤️ by Asim Merchant**
